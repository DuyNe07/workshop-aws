[
{
	"uri": "//localhost:1313/vi/1-introduce/1.1-elasticcache/",
	"title": "ElasticCache",
	"tags": [],
	"description": "",
	"content": "Amazon ElastiCache giúp dễ dàng thiết lập, quản lý và mở rộng môi trường bộ nhớ đệm phân tán trong AWS Cloud. Nó cung cấp bộ nhớ đệm trong bộ nhớ có hiệu suất cao, có thể thay đổi kích thước và tiết kiệm chi phí, đồng thời loại bỏ sự phức tạp liên quan đến việc triển khai và quản lý môi trường bộ nhớ đệm phân tán.\nElastiCache hỗ trợ hai công cụ lưu trữ đệm trong bộ nhớ nguồn mở: Redis và Memcached.\nRedis, viết tắt của Remote Dictionary Server, là một kho lưu trữ cấu trúc dữ liệu nguồn mở, nhanh. Nó thường được sử dụng như một kho lưu trữ dữ liệu trong bộ nhớ phân tán được sử dụng làm cơ sở dữ liệu, bộ nhớ đệm, công cụ phát trực tuyến và môi giới tin nhắn. Redis hỗ trợ nhiều loại cấu trúc dữ liệu trừu tượng khác nhau, chẳng hạn như chuỗi, danh sách, bản đồ, tập hợp, tập hợp được sắp xếp, HyperLogLog, bitmap, luồng và chỉ số không gian. Memcached là một kho lưu trữ dữ liệu trong bộ nhớ trực quan, hiệu suất cao. Nó cung cấp một giải pháp nguồn mở, có khả năng mở rộng, trưởng thành để cung cấp thời gian phản hồi dưới một mili giây, giúp nó hữu ích như một bộ nhớ đệm hoặc một kho lưu trữ phiên không bền. ElastiCache là dịch vụ lưu trữ đệm trong bộ nhớ được quản lý hoàn toàn, hỗ trợ các trường hợp sử dụng thời gian thực đòi hỏi hiệu suất cực nhanh và thông lượng cao. ElastiCache thường được sử dụng làm bộ nhớ đệm để tăng hiệu suất ứng dụng hoặc cơ sở dữ liệu. Nó cũng có thể đóng vai trò là kho lưu trữ dữ liệu chính cho các trường hợp sử dụng không yêu cầu độ bền, chẳng hạn như kho lưu trữ phiên, bảng xếp hạng trò chơi, phát trực tuyến và giới hạn tốc độ API.\nElastiCache giải quyết được những vấn đề gì? Sử dụng ElastiCache, bạn có thể hợp lý hóa cách triển khai, vận hành và mở rộng quy mô trên đám mây. Với cơ sở dữ liệu truyền thống, bạn phải quản lý cơ sở hạ tầng và nâng cấp cơ bản, vá lỗi, quản lý cụm, sao lưu và khối lượng công việc sản xuất. Các dịch vụ cơ sở dữ liệu được quản lý hoàn toàn tự động hóa các tác vụ này. Sau đây là một số cách ElastiCache có thể giúp:\nCung cấp các công cụ Redis và Memcached tuân thủ API với bất kỳ ứng dụng nguồn mở nào sử dụng OSS Redis hoặc Memcached Mở rộng tài nguyên tính toán và bộ nhớ của bạn theo chiều dọc hoặc chiều ngang trong vài phút Mở rộng khả năng đọc/ghi của bạn dựa trên nhu cầu kinh doanh thay đổi Cung cấp mức độ bảo mật và hỗ trợ cao cho Amazon Virtual Private Cloud (Amazon VPC), Transport Layer Security (TLS), mã hóa và đủ điều kiện cho nhiều chứng chỉ tuân thủ Cung cấp khả năng giám sát liên tục và chuyển đổi dự phòng tự động Mục tiêu của ElastiCache là giảm bớt sự phức tạp bổ sung khi quản lý hệ thống lưu trữ đệm trong bộ nhớ của bạn cho các công cụ Redis và Memcached. Các nhà phát triển có thể tiếp tục sử dụng cùng một mã ứng dụng Redis và Memcached, trình điều khiển và công cụ để chạy, quản lý và mở rộng khối lượng công việc của họ trên ElastiCache. Các nhà phát triển và quản trị viên có thể dựa vào các dịch vụ được quản lý để xử lý các công việc nặng nhọc không phân biệt, tập trung vào phát triển ứng dụng để tăng thêm giá trị cho khách hàng của họ.\nElastiCache được sử dụng như thế nào để xây dựng giải pháp đám mây ? ElastiCache lưu trữ dữ liệu trong bộ nhớ chính (DRAM) của máy chủ để truy cập nhanh. ElastiCache thường được sử dụng làm bộ nhớ đệm trước cơ sở dữ liệu chính phụ trợ như Amazon Relational Database Service (Amazon RDS). Vì dữ liệu được lưu trữ trong DRAM có thể được truy cập nhanh hơn nhiều so với các hệ thống dựa trên đĩa, ElastiCache có thể mang lại lợi ích đáng kể về hiệu suất khi được đặt trước cơ sở dữ liệu.\nElastiCache là dịch vụ chỉ trong bộ nhớ được thiết kế để cung cấp hiệu suất cực nhanh với cái giá phải trả là độ bền. Nó có thể phục vụ đọc/ghi dữ liệu tạm thời ở độ trễ micro giây, điều này rất mong muốn đối với các ứng dụng thời gian thực.\nSơ đồ sau đây hiển thị một ví dụ về cách khi máy khách gửi yêu cầu đến ứng dụng, trước tiên nó sẽ cố gắng truy xuất dữ liệu tương ứng từ ElastiCache. Nếu yêu cầu thành công, thì được gọi là truy cập bộ nhớ đệm. Nếu không thành công, thì được gọi là bỏ lỡ bộ nhớ đệm. Trong trường hợp lỗi bộ nhớ đệm, yêu cầu được chuyển tiếp đến nguồn dữ liệu thực (RDS MySQL trong trường hợp này) và truy xuất dữ liệu tương ứng. Sau đó, dữ liệu được ghi vào bộ nhớ đệm trước khi gửi phản hồi trở lại máy khách.\nVí dụ về cách ElastiCache xử lý yêu cầu của khách hàng gửi tới ứng dụng\n"
},
{
	"uri": "//localhost:1313/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong số nhiều cách xử lý dữ liệu trên máy tính, một trong những cách phổ biến nhất là dữ liệu chỉ đọc cần được trình bày nhanh chóng và tới số lượng lớn người dùng, chẳng hạn như nhạc hoặc video được phát trực tuyến trên toàn thế giới. Loại dữ liệu này hiếm khi được cập nhật hoặc xóa nhưng có khối lượng lớn và nhu cầu về nó có thể dao động đáng kể (hãy nghĩ đến một video hoặc bài hát được lan truyền rộng rãi). Do nhu cầu về loại quyền truy cập này ngày càng trở nên phổ biến nên Amazon Web Services (AWS) cung cấp các công cụ để xử lý nó. Các công cụ này chủ yếu là những công cụ có thể truy xuất dữ liệu nhanh chóng và phân phối dữ liệu trên nhiều máy chủ để đáp ứng nhu cầu cao nhất và thấp nhất—đồng thời thực hiện việc đó theo cách tiết kiệm chi phí và chỉ tính phí sử dụng.\nCác ứng dụng và trang web thường cung cấp nhiều loại dữ liệu và dịch vụ cho người dùng. Trong phạm vi dữ liệu rộng lớn này, thường có một tập hợp con dữ liệu nhỏ hơn được yêu cầu và truy cập thường xuyên hơn. Đây có thể là dữ liệu trên trang nhất được hiển thị cho mọi khách truy cập (hãy nghĩ đến 10 sản phẩm hàng đầu trong ngày của Amazon) hoặc có thể là một phương tiện truyền thông được phát hành gần đây đang có mức độ phổ biến tăng đột biến (một bài hát mới được phát hành trên Spotify). Các ứng dụng khác chạy các quy trình cực kỳ tốn nhiều bộ nhớ và có thể gặp phải các vấn đề về hiệu suất trên ổ lưu trữ chậm hơn.\nTrong bài workshop này, chúng ta sẽ cùng tìm hiểu sâu hơn về Amazon ElastiCache và Elastic Load Balancing?, khám phá cách hoạt động, lợi ích, và cách triển khai dịch vụ này để tối ưu hóa hiệu suất ứng dụng của bạn.\nNhững gì bạn sẽ học Elasticache là gì ? Elastic Load Balancing là gì? Giá cả Các loại ELB trong AWS "
},
{
	"uri": "//localhost:1313/vi/2-lab1/2.1-launch_the_first_ec2_instance/",
	"title": "Launch the first EC2 instance",
	"tags": [],
	"description": "",
	"content": "Đầu tiên hãy tạo 1 EC2 instance Trong hộp tìm kiếm bên phải Dịch vụ, hãy tìm kiếm và chọn EC2 để mở bảng điều khiển EC2 Chọn nút Khởi chạy phiên bản ở giữa trang, sau đó chọn Khởi chạy phiên bản từ menu thả xuống. Tiếp theo hãy nhập tên và lựa chọn Application and OS Images là Amazon Linux để sử dụng free tier Chọn Instance type là t2.micro (free tier) và key pair là vockey Trong phần Network settings, chọn Chỉnh sửa.\nỞ mục Subnet, chọn mạng con hiện có trong Availability Zone us-east-1a. Đối với Security group name hãy nhập Web Server security group Đối với Description hãy nhập Security group for my web server Trong phần Inbound security groups rules, chọn Remove để xóa quy tắc mặc định. Chọn Add security group rule để định cấu hình quy tắc mới như bên dưới Type : HTTP Source type : Anywhere Sau khi ở bước này nó sẽ tạo ra 1 Security group mới, nếu bạn muốn lựa chọn security theo ý muốn của mình thì hãy chọn exisiting security group nhé !\nTrong bảng Configure storage thì hãy giữ nguyên cấu hình lưu trữ mặc định.\nCấu hình phần Advance details để chèn mẫu 1 script mẫu để có thể test thử EC2\nMở rộng phần Advance details Kéo xuống cuối ở phần User data và nhập đoạn cript cli mẫu như dưới #!/bin/bash\ryum update -y\ryum -y install httpd\rsystemctl enable httpd\rsystemctl start httpd\recho \u0026#39;\u0026lt;html\u0026gt;\u0026lt;h1\u0026gt;Hello World! This is server 1.\u0026lt;/h1\u0026gt;\u0026lt;/html\u0026gt;\u0026#39; \u0026gt; /var/www/html/index.html Tập lệnh này thực hiện các thao tác sau:\nCập nhật máy chủ Cài đặt máy chủ web Apache (httpd) Cấu hình máy chủ web để tự động khởi động khi khởi động Khởi động máy chủ web Tạo trang web đơn giản Kiểm tra kỹ lại 1 lần nữa và chọn Launch instance ở phần Summary Tiếp theo sau khi Lauch log Succeeded toàn bộ hãy chọn Instances Hãy đợi 1 lúc và chờ cho trạng thái của nó là sẵn sàng tất cả Truy cập trang web của phiên bản EC2 của bạn Sao chép chuỗi Ipv4 và truy cập: http://\u0026lt;ip của bạn\u0026gt; "
},
{
	"uri": "//localhost:1313/vi/1-introduce/1.2-elastic_load_balancing/",
	"title": "Elastic Load Balancing",
	"tags": [],
	"description": "",
	"content": "Các ứng dụng khác chạy các quy trình cực kỳ tốn nhiều bộ nhớ và có thể gặp phải các vấn đề về hiệu suất trên ổ lưu trữ chậm hơn.\nĐối với loại dữ liệu được yêu cầu nhiều hoặc sử dụng nhiều bộ nhớ này, dịch vụ lưu vào bộ nhớ đệm dữ liệu như ElastiCache có thể giúp đảm bảo rằng dữ liệu có thể được truy cập và xử lý cực kỳ nhanh chóng. Nó hoạt động bằng cách lưu trữ dữ liệu trong bộ nhớ cực nhanh nhưng tạm thời nhanh hơn bộ nhớ trên đĩa. Sự đánh đổi là bộ nhớ nhanh có ít dung lượng lưu trữ hơn và không lưu trữ dữ liệu vĩnh viễn.\nNhiều công ty sử dụng ElastiCache để xây dựng ứng dụng thời gian thực, tăng tốc thương mại điện tử và lưu vào bộ nhớ đệm trang web của họ. Các trường hợp sử dụng: giao dịch theo thời gian thực, trò chuyện, BI và phân tích, cửa hàng phiên, bảng xếp hạng trò chơi và bộ đệm.\nLưu lượng truy cập lớn có thể tắt ứng dụng và trang web nếu máy chủ không thể xử lý tải. Đây là lý do tại sao AWS có ELB, có thể phát hiện khi có quá nhiều yêu cầu và tự động chuyển hướng lưu lượng truy cập sang máy chủ mới để duy trì tốc độ và độ ổn định.\nElastic Load Balancing tự động phân phối lưu lượng truy cập đến của bạn trên nhiều mục tiêu, chẳng hạn như các phiên bản EC2, vùng chứa và địa chỉ IP, trong một hoặc nhiều Vùng khả dụng. Nó theo dõi tình trạng của các mục tiêu đã đăng ký và chỉ định tuyến lưu lượng truy cập đến các mục tiêu lành mạnh. Elastic Load Balancing tự động điều chỉnh dung lượng bộ cân bằng tải của bạn để phản hồi các thay đổi trong lưu lượng truy cập đến.\nLợi ích của Load Balancing Cân bằng tải đàn hồi tự động phân phối lưu lượng truy cập ứng dụng đến trên nhiều mục tiêu, chẳng hạn như phiên bản, bộ chứa, địa chỉ IP và chức năng AWS Lambda của Amazon Elastic Computing Cloud (Amazon EC2).\nNếu lưu lượng truy cập vào một trang web đột ngột tăng đột biến, lưu lượng truy cập đó có thể được chuyển đến các phiên bản EC2 khác (hoặc các loại phiên bản khác như phiên bản Lambda) đã được thiết lập trước cho mục đích này. Cân bằng tải này tránh cho một máy chủ bị quá tải do lưu lượng truy cập tăng lên.\nNhững lợi ích chính của ELB: Tăng khả năng sẵn sàng: Phân tán lưu lượng: ELB phân tán lưu lượng truy cập đến nhiều instance, giúp giảm thiểu rủi ro khi một instance gặp sự cố. Nếu một instance bị lỗi, ELB sẽ tự động chuyển hướng các yêu cầu đến các instance còn lại. Khả năng phục hồi: ELB liên tục giám sát tình trạng của các instance và tự động loại bỏ những instance không hoạt động và thêm các instance mới vào khi cần thiết. Cải thiện hiệu suất: Phân bổ tải: ELB giúp phân bổ tải làm việc đồng đều cho các instance, ngăn chặn tình trạng quá tải trên một instance. Giảm thời gian phản hồi: Bằng cách phân tán lưu lượng, ELB giúp giảm thiểu thời gian phản hồi của ứng dụng, mang lại trải nghiệm tốt hơn cho người dùng. Tăng khả năng mở rộng: Điều chỉnh quy mô tự động: ELB có thể tự động điều chỉnh quy mô của cụm instance để đáp ứng nhu cầu thay đổi của ứng dụng. Khi lưu lượng tăng, ELB sẽ tự động thêm các instance mới vào cụm và ngược lại. Bảo mật: Kết nối SSL/TLS: ELB hỗ trợ kết nối SSL/TLS để bảo mật dữ liệu truyền đi giữa người dùng và ứng dụng. Quản lý chứng chỉ: ELB giúp bạn dễ dàng quản lý các chứng chỉ SSL/TLS. Tính năng nâng cao: Cân bằng tải dựa trên đường dẫn: ELB có thể phân phối lưu lượng dựa trên đường dẫn URL, giúp tối ưu hóa việc sử dụng các tài nguyên. Cân bằng tải dựa trên cookie: ELB có thể duy trì session của người dùng bằng cách sử dụng cookie, giúp đảm bảo rằng các yêu cầu của một người dùng cụ thể luôn được gửi đến cùng một instance. Tích hợp với các dịch vụ AWS khác: ELB có thể dễ dàng tích hợp với các dịch vụ AWS khác như Auto Scaling, CloudWatch, và Route 53. "
},
{
	"uri": "//localhost:1313/vi/2-lab1/",
	"title": "Lab 1: Create EC2 instance",
	"tags": [],
	"description": "",
	"content": "Bây giờ chúng ta sẽ bắt đầu thực hiện bài lab bằng việc tạo mô phỏng Ba máy tính đang truy cập nội dung trên Đám mây AWS. Bộ cân bằng tải sẽ phân chia quyền truy cập này giữa Vùng sẵn sàng A và Vùng sẵn sàng B. Mỗi Vùng sẵn sàng có ba phiên bản EC2, nhưng một phiên bản ở Vùng sẵn sàng A không hoạt động.\nBắt đầu bằng việc khởi tạo 2 EC2 Instances ở 2 vùng khác nhau !\n"
},
{
	"uri": "//localhost:1313/vi/2-lab1/2.2-launch_second_ec2_instance/",
	"title": "Launch a second EC2 instance",
	"tags": [],
	"description": "",
	"content": "Bây giờ chúng ta sẽ bắt đầu thực hiện bài lab bằng việc tạo mô phỏng Ba máy tính đang truy cập nội dung trên Đám mây AWS. Bộ cân bằng tải sẽ phân chia quyền truy cập này giữa Vùng sẵn sàng A và Vùng sẵn sàng B. Mỗi Vùng sẵn sàng có ba phiên bản EC2, nhưng một phiên bản ở Vùng sẵn sàng A không hoạt động.\nBắt đầu bằng việc khởi tạo 2 EC2 Instances ở 2 vùng khác nhau !\n"
},
{
	"uri": "//localhost:1313/vi/",
	"title": "Load Balancer",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong bài này chúng ta sẽ cùng nhau tìm hiểu về Elastic Load Balancing trên AWS\nNội dung bao gồm Giới thiệu Lab 1: Khởi tạo EC2 Instance Lab 2: Khởi tạo Load balancer Chạy thử và dọn dẹp Nội dung Giới thiệu Tạo EC2 instance cho bộ cân bằng tải Khởi tạo bộ cân bằng tải Dọn dẹp thử nghiệm "
},
{
	"uri": "//localhost:1313/vi/1-introduce/1.3-pricing/",
	"title": "Pricing",
	"tags": [],
	"description": "",
	"content": "Elastic Load Balancing cung cấp bốn loại cân bằng tải, tất cả đều có độ khả dụng cao, tự động điều chỉnh quy mô và hỗ trợ bảo mật mạnh mẽ cho các ứng dụng của bạn: Application Load Balancer, Network Load Balancer, Gateway Load Balancer và Classic Load Balancer. Bạn chỉ phải trả cho những gì mình sử dụng với các dịch vụ này.\nApplication Load Balancer Bạn phải trả phí cho mỗi giờ hoặc thời gian không tròn một giờ mà Application Load Balancer đang hoạt động và số Đơn vị công suất Load Balancer (LCU) được sử dụng mỗi giờ.\nNetwork Load Balancer Bạn phải trả phí cho mỗi giờ hoặc thời gian không tròn một giờ mà Network Load Balancer đang hoạt động và số Đơn vị công suất Network Load Balancer (NLCU) được Network Load Balancer sử dụng mỗi giờ.\nGateway Load Balancer Bạn phải trả phí cho mỗi giờ hoặc thời gian không tròn một giờ mà Gateway Load Balancer đang hoạt động và số Đơn vị công suất Gateway Load Balancer (GLCU) được Gateway Load Balancer sử dụng mỗi giờ. Gateway Load Balancer sử dụng Điểm cuối Gateway Load Balancer (GWLBE). Đây là loại Điểm cuối VPC mới với sức mạnh của công nghệ AWS PrivateLink, giúp đơn giản hóa phương thức các ứng dụng trao đổi lưu lượng truy cập một cách bảo mật nhờ GWLB trên các biên VPC. GWLBE có mức định giá và tính phí riêng biệt.\nClassic Load Balancer Bạn phải trả phí cho mỗi giờ hoặc thời gian không tròn một giờ mà Bộ cân bằng tải cổ điển hoạt động và cho mỗi GB dữ liệu được truyền qua bộ cân bằng tải của bạn.\nFree Tier của AWS Sau khi mình tìm hiểu thì ELB có trong chương trình free tier của AWS cho các tài khoản mới. Khi đăng ký, khách hàng AWS mới sẽ nhận được 750 giờ sử dụng chung mỗi tháng cho Classic Load Balancer và Application Load Balancer; 15 GB xử lý dữ liệu cho Classic Load Balancer và 15 LCU cho Application Load Balancer.\nĐể biết thêm nhiều chi tiết hơn về chi phí của ELB truy cập: Phân bổ lưu lượng truy cập mạng và ứng dụng - Giá của Elastic Load Balancing - AWS (amazon.com)\n"
},
{
	"uri": "//localhost:1313/vi/1-introduce/1.4-types_of_elbs_in_aws/",
	"title": "Types of ELBs",
	"tags": [],
	"description": "",
	"content": "Lưu lượng truy cập lớn có thể tắt ứng dụng và trang web nếu máy chủ không thể xử lý tải. Đây là lý do tại sao AWS có ELB, có thể phát hiện khi có quá nhiều yêu cầu và tự động chuyển hướng lưu lượng truy cập sang máy chủ mới để duy trì tốc độ và độ ổn định. Có ba loại ELB trong AWS.\nCân bằng tải ứng dụng: Cân bằng tải ứng dụng phù hợp nhất để cân bằng tải lưu lượng Giao thức truyền siêu văn bản (HTTP) và HTTP an toàn (HTTPS), đồng thời cung cấp định tuyến yêu cầu nâng cao nhắm mục tiêu phân phối các kiến trúc ứng dụng hiện đại, bao gồm cả vi dịch vụ và bộ chứa. Hoạt động ở cấp độ yêu cầu riêng lẻ (Lớp 7), Cân bằng tải ứng dụng định tuyến lưu lượng truy cập đến các mục tiêu trong Amazon Virtual Private Cloud (Amazon VPC) dựa trên nội dung của yêu cầu. Cân bằng tải ứng dụng được thực hiện dựa trên nội dung của bộ định vị tài nguyên thống nhất (URL). Ví dụ: nếu URL kết thúc bằng /main, yêu cầu sẽ được chuyển đến một phiên bản; nếu URL kết thúc bằng blog/, nó sẽ được định tuyến đến một phiên bản khác nếu công việc định nghĩa Cân bằng tải ứng dụng đã được thực hiện trước để thực hiện điều này.\nTrình cân bằng tải mạng: Trình cân bằng tải mạng phù hợp nhất để cân bằng tải lưu lượng Giao thức điều khiển truyền dẫn (TCP), Giao thức gói dữ liệu người dùng (UDP) và Bảo mật lớp truyền tải (TLS) khi cần hiệu suất cực cao. Hoạt động ở cấp độ kết nối (Lớp 4), Network Load Balancer định tuyến lưu lượng truy cập đến các mục tiêu trong Amazon VPC và có khả năng xử lý hàng triệu yêu cầu mỗi giây trong khi vẫn duy trì độ trễ cực thấp. Network Load Balancer cũng được tối ưu hóa để xử lý các dạng lưu lượng truy cập đột ngột và không ổn định.\nDo tốc độ tăng lên có thể đạt được ở lớp kết nối, nên loại cân bằng tải Network Load Balancer được ưa chuộng hơn khi cố gắng tránh lưu lượng mạng cao hơn. Ví dụ: để tránh sự chậm trễ khi sự quan tâm đến một trang web lan truyền rộng rãi, bạn nên chọn sử dụng cân bằng Network Load Balancer.\nCân bằng tải cổ điển: Cân bằng tải cổ điển cung cấp khả năng cân bằng tải cơ bản trên nhiều phiên bản EC2 và hoạt động ở cấp độ yêu cầu và kết nối. Cân bằng tải cổ điển dành cho các ứng dụng được xây dựng trong mạng EC2-Classic.\n"
},
{
	"uri": "//localhost:1313/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:1313/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]