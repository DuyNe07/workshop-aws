[
{
	"uri": "//localhost:51778/vi/4-test_clean_up/4.1-updateiamrole/",
	"title": "Cập nhật IAM Role",
	"tags": [],
	"description": "",
	"content": "Để các EC2 instance của chúng ta có thể gửi session log tới S3 bucket , chúng ta sẽ cần cập nhật IAM Role đã gán vào EC2 instance bằng cách thêm vào policy cho phép quyền truy cập vào S3.\nCập nhật IAM Role Truy cập vào giao diện quản trị dịch vụ IAM Click Roles. Tại ô tìm kiếm , điền SSM. Click vào role SSM-Role. Click Attach policies. Tại ô Search điền S3. Click chọn policy AmazonS3FullAccess. Click Attach policy. Trong thực tế chúng ta sẽ cấp quyền chặt chẽ hơn tới S3 bucket chỉ định. Trong khuôn khổ bài lab này chúng ta sử dụng policy AmazonS3FullAccess cho tiện dụng.\nTiếp theo chúng ta sẽ tiến hành tạo S3 bucket để lưu trữ session logs.\n"
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/",
	"title": "Chuẩn bị VPC và EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ cần tạo một VPC có 2 subnet public / private. Sau đó tạo 1 EC2 Instance Linux nằm trong public subnet, 1 EC2 Instance Windows nằm trong private subnet.\nTổng quan kiến trúc sau khi các bạn hoàn tất bước này sẽ như sau:\nĐể tìm hiểu cách tạo các EC2 instance và VPC với public/private subnet các bạn có thể tham khảo bài lab :\nGiới thiệu về Amazon EC2 Làm việc với Amazon VPC Nội dung Tạo VPC Tạo Public subnet Tạo Private subnet Tạo security group Tạo máy chủ Linux public Tạo máy chủ Windows private "
},
{
	"uri": "//localhost:51778/vi/1-introduce/1.1-what_is_elasticcache/",
	"title": "Elasticache là gì",
	"tags": [],
	"description": "",
	"content": "Amazon ElastiCache giúp dễ dàng thiết lập, quản lý và mở rộng môi trường bộ nhớ đệm phân tán trong AWS Cloud. Nó cung cấp bộ nhớ đệm trong bộ nhớ có hiệu suất cao, có thể thay đổi kích thước và tiết kiệm chi phí, đồng thời loại bỏ sự phức tạp liên quan đến việc triển khai và quản lý môi trường bộ nhớ đệm phân tán.\nElastiCache hỗ trợ hai công cụ lưu trữ đệm trong bộ nhớ nguồn mở: Redis và Memcached.\nRedis, viết tắt của Remote Dictionary Server, là một kho lưu trữ cấu trúc dữ liệu nguồn mở, nhanh. Nó thường được sử dụng như một kho lưu trữ dữ liệu trong bộ nhớ phân tán được sử dụng làm cơ sở dữ liệu, bộ nhớ đệm, công cụ phát trực tuyến và môi giới tin nhắn. Redis hỗ trợ nhiều loại cấu trúc dữ liệu trừu tượng khác nhau, chẳng hạn như chuỗi, danh sách, bản đồ, tập hợp, tập hợp được sắp xếp, HyperLogLog, bitmap, luồng và chỉ số không gian. Memcached là một kho lưu trữ dữ liệu trong bộ nhớ trực quan, hiệu suất cao. Nó cung cấp một giải pháp nguồn mở, có khả năng mở rộng, trưởng thành để cung cấp thời gian phản hồi dưới một mili giây, giúp nó hữu ích như một bộ nhớ đệm hoặc một kho lưu trữ phiên không bền. ElastiCache là dịch vụ lưu trữ đệm trong bộ nhớ được quản lý hoàn toàn, hỗ trợ các trường hợp sử dụng thời gian thực đòi hỏi hiệu suất cực nhanh và thông lượng cao. ElastiCache thường được sử dụng làm bộ nhớ đệm để tăng hiệu suất ứng dụng hoặc cơ sở dữ liệu. Nó cũng có thể đóng vai trò là kho lưu trữ dữ liệu chính cho các trường hợp sử dụng không yêu cầu độ bền, chẳng hạn như kho lưu trữ phiên, bảng xếp hạng trò chơi, phát trực tuyến và giới hạn tốc độ API.\nElastiCache giải quyết được những vấn đề gì? Sử dụng ElastiCache, bạn có thể hợp lý hóa cách triển khai, vận hành và mở rộng quy mô trên đám mây. Với cơ sở dữ liệu truyền thống, bạn phải quản lý cơ sở hạ tầng và nâng cấp cơ bản, vá lỗi, quản lý cụm, sao lưu và khối lượng công việc sản xuất. Các dịch vụ cơ sở dữ liệu được quản lý hoàn toàn tự động hóa các tác vụ này. Sau đây là một số cách ElastiCache có thể giúp:\nCung cấp các công cụ Redis và Memcached tuân thủ API với bất kỳ ứng dụng nguồn mở nào sử dụng OSS Redis hoặc Memcached Mở rộng tài nguyên tính toán và bộ nhớ của bạn theo chiều dọc hoặc chiều ngang trong vài phút Mở rộng khả năng đọc/ghi của bạn dựa trên nhu cầu kinh doanh thay đổi Cung cấp mức độ bảo mật và hỗ trợ cao cho Amazon Virtual Private Cloud (Amazon VPC), Transport Layer Security (TLS), mã hóa và đủ điều kiện cho nhiều chứng chỉ tuân thủ Cung cấp khả năng giám sát liên tục và chuyển đổi dự phòng tự động Mục tiêu của ElastiCache là giảm bớt sự phức tạp bổ sung khi quản lý hệ thống lưu trữ đệm trong bộ nhớ của bạn cho các công cụ Redis và Memcached. Các nhà phát triển có thể tiếp tục sử dụng cùng một mã ứng dụng Redis và Memcached, trình điều khiển và công cụ để chạy, quản lý và mở rộng khối lượng công việc của họ trên ElastiCache. Các nhà phát triển và quản trị viên có thể dựa vào các dịch vụ được quản lý để xử lý các công việc nặng nhọc không phân biệt, tập trung vào phát triển ứng dụng để tăng thêm giá trị cho khách hàng của họ.\nElastiCache được sử dụng như thế nào để xây dựng giải pháp đám mây ? ElastiCache lưu trữ dữ liệu trong bộ nhớ chính (DRAM) của máy chủ để truy cập nhanh. ElastiCache thường được sử dụng làm bộ nhớ đệm trước cơ sở dữ liệu chính phụ trợ như Amazon Relational Database Service (Amazon RDS). Vì dữ liệu được lưu trữ trong DRAM có thể được truy cập nhanh hơn nhiều so với các hệ thống dựa trên đĩa, ElastiCache có thể mang lại lợi ích đáng kể về hiệu suất khi được đặt trước cơ sở dữ liệu.\nElastiCache là dịch vụ chỉ trong bộ nhớ được thiết kế để cung cấp hiệu suất cực nhanh với cái giá phải trả là độ bền. Nó có thể phục vụ đọc/ghi dữ liệu tạm thời ở độ trễ micro giây, điều này rất mong muốn đối với các ứng dụng thời gian thực.\nSơ đồ sau đây hiển thị một ví dụ về cách khi máy khách gửi yêu cầu đến ứng dụng, trước tiên nó sẽ cố gắng truy xuất dữ liệu tương ứng từ ElastiCache. Nếu yêu cầu thành công, thì được gọi là truy cập bộ nhớ đệm. Nếu không thành công, thì được gọi là bỏ lỡ bộ nhớ đệm. Trong trường hợp lỗi bộ nhớ đệm, yêu cầu được chuyển tiếp đến nguồn dữ liệu thực (RDS MySQL trong trường hợp này) và truy xuất dữ liệu tương ứng. Sau đó, dữ liệu được ghi vào bộ nhớ đệm trước khi gửi phản hồi trở lại máy khách.\nVí dụ về cách ElastiCache xử lý yêu cầu của khách hàng gửi tới ứng dụng "
},
{
	"uri": "//localhost:51778/vi/1-introduce/",
	"title": "Giới thiệu",
	"tags": [],
	"description": "",
	"content": "Trong số nhiều cách xử lý dữ liệu trên máy tính, một trong những cách phổ biến nhất là dữ liệu chỉ đọc cần được trình bày nhanh chóng và tới số lượng lớn người dùng, chẳng hạn như nhạc hoặc video được phát trực tuyến trên toàn thế giới. Loại dữ liệu này hiếm khi được cập nhật hoặc xóa nhưng có khối lượng lớn và nhu cầu về nó có thể dao động đáng kể (hãy nghĩ đến một video hoặc bài hát được lan truyền rộng rãi). Do nhu cầu về loại quyền truy cập này ngày càng trở nên phổ biến nên Amazon Web Services (AWS) cung cấp các công cụ để xử lý nó. Các công cụ này chủ yếu là những công cụ có thể truy xuất dữ liệu nhanh chóng và phân phối dữ liệu trên nhiều máy chủ để đáp ứng nhu cầu cao nhất và thấp nhất—đồng thời thực hiện việc đó theo cách tiết kiệm chi phí và chỉ tính phí sử dụng.\nCác ứng dụng và trang web thường cung cấp nhiều loại dữ liệu và dịch vụ cho người dùng. Trong phạm vi dữ liệu rộng lớn này, thường có một tập hợp con dữ liệu nhỏ hơn được yêu cầu và truy cập thường xuyên hơn. Đây có thể là dữ liệu trên trang nhất được hiển thị cho mọi khách truy cập (hãy nghĩ đến 10 sản phẩm hàng đầu trong ngày của Amazon) hoặc có thể là một phương tiện truyền thông được phát hành gần đây đang có mức độ phổ biến tăng đột biến (một bài hát mới được phát hành trên Spotify). Các ứng dụng khác chạy các quy trình cực kỳ tốn nhiều bộ nhớ và có thể gặp phải các vấn đề về hiệu suất trên ổ lưu trữ chậm hơn.\nTrong bài workshop này, chúng ta sẽ cùng tìm hiểu sâu hơn về Amazon ElastiCache và Elastic Load Balancing?, khám phá cách hoạt động, lợi ích, và cách triển khai dịch vụ này để tối ưu hóa hiệu suất ứng dụng của bạn.\nNhững gì bạn sẽ học Elasticache là gì ? Elastic Load Balancing là gì? Giá cả Các loại ELB trong AWS "
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.1-public-instance/",
	"title": "Kết nối đến máy chủ Public",
	"tags": [],
	"description": "",
	"content": "\nTruy cập vào giao diện quản trị của dịch vụ EC2. Click chọn Public Linux Instance. Click Actions. Click Security. Click Modify IAM role. Tại trang Modify IAM role. Click chọn SSM-Role. Click Save. Bạn sẽ cần chờ khoảng 10 phút trước khi thực hiện bước tiếp theo. Thời gian này EC2 instance của chúng ta sẽ tự động đăng ký với Session Manager.\nTruy cập vào giao diện quản trị của dịch vụ AWS Systems Manager Kéo thanh trượt menu bên trái xuống dưới. Click Session Manager. Click Start Session. Sau đó chọn Public Linux Instance và click Start session để truy cập vào instance. Terminal sẽ xuất hiện trên trình duyệt. Kiểm tra với câu lệnh sudo tcpdump -nn port 22 và sudo tcpdump chúng ta sẽ thấy không có traffic của SSH mà chỉ có traffic HTTPS. Ở trên, chúng ta đã tạo kết nối vào public instance mà không cần mở cổng SSH 22, giúp cho việc bảo mật tốt hơn, tránh mọi sự tấn công tới cổng SSH.\nMột nhược điểm của cách làm trên là ta phải mở Security Group outbound ở cổng 443 ra ngoài internet. Vì là public instance nên có thể sẽ không vấn đề gì nhưng nếu bạn muốn bảo mật hơn nữa, bạn có thể khoá cổng 443 ra ngoài internet mà vẫn sử dụng được Session Manager. Chúng ta sẽ đi qua cách làm này ở phần private instance dưới đây.\nBạn có thể terminate để kết thúc session đang kết nối trước khi qua bước tiếp theo.\n"
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.1-enablevpcdns/",
	"title": "Kích hoạt DNS hostnames",
	"tags": [],
	"description": "",
	"content": "Kích hoạt tính năng DNS hostnames trên VPC. Để tạo được VPC Endpoint chúng ta sẽ cần bật tính năng DNS hostnames trên VPC. Truy cập đến giao diện quản trị của dịch vụ VPC\nClick Your VPCs.\nChọn Lab VPC.\nClick Actions.\nClick Edit DNS hostnames.\nClick Endpoint, sau đó click Create Endpoint.\nTại trang Edit DNS hostnames. Click chọn Enable. Click Save changes. "
},
{
	"uri": "//localhost:51778/vi/",
	"title": "Load Balancer",
	"tags": [],
	"description": "",
	"content": "Tổng quan Trong bài này chúng ta sẽ cùng nhau tìm hiểu về Elastic Load Balancing trên AWS\nNội dung bao gồm Giới thiệu Lab 1: Khởi tạo EC2 Instance Lab 2: Khởi tạo Load balancer Chạy thử và dọn dẹp Nội dung Giới thiệu Tạo EC2 instance cho bộ cân bằng tải Khởi tạo bộ cân bằng tải Dọn dẹp thử nghiệm "
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.1-endpointssm/",
	"title": "Tạo Endpoint ssm",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSM Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSM. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: SSM sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ssm. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ssm. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint cho SSM. "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.1-createvpc/",
	"title": "Tạo VPC ",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Lab VPC Truy cập giao diện quản trị dịch vụ VPC Click Your VPC. Click Create VPC. Tại trang Create VPC. Tại mục Name tag điền Lab VPC. Tại mục IPv4 CIDR điền : 10.10.0.0/16. Click Create VPC. "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/",
	"title": "Các bước chuẩn bị",
	"tags": [],
	"description": "",
	"content": "\rBạn cần tạo sẵn 1 Linux instance thuộc public subnet và 1 Window instance thuộc private subnet để thực hiện bài thực hành này.\nĐể tìm hiểu cách tạo các EC2 instance và VPC với public/private subnet các bạn có thể tham khảo bài lab :\nGiới thiệu về Amazon EC2 Làm việc với Amazon VPC Để sử dụng System Manager để quản lý window instance nói riêng và các instance nói chung của chúng ta trên AWS, ta cần phải cung cấp quyền cho các instance của chúng ta có thể làm việc với System Manager.Trong phần chuẩn bị này, chúng ta cũng sẽ tiến hành tạo IAM Role để cấp quyền cho các instance có thể làm việc với System Manager.\nNội dung Chuẩn bị VPC và EC2 Instance Tạo IAM Role "
},
{
	"uri": "//localhost:51778/vi/1-introduce/1.2-what_is_elastic_load_balancing/",
	"title": "Elastic Load Balancing là gì",
	"tags": [],
	"description": "",
	"content": "Các ứng dụng khác chạy các quy trình cực kỳ tốn nhiều bộ nhớ và có thể gặp phải các vấn đề về hiệu suất trên ổ lưu trữ chậm hơn.\nĐối với loại dữ liệu được yêu cầu nhiều hoặc sử dụng nhiều bộ nhớ này, dịch vụ lưu vào bộ nhớ đệm dữ liệu như ElastiCache có thể giúp đảm bảo rằng dữ liệu có thể được truy cập và xử lý cực kỳ nhanh chóng. Nó hoạt động bằng cách lưu trữ dữ liệu trong bộ nhớ cực nhanh nhưng tạm thời nhanh hơn bộ nhớ trên đĩa. Sự đánh đổi là bộ nhớ nhanh có ít dung lượng lưu trữ hơn và không lưu trữ dữ liệu vĩnh viễn.\nNhiều công ty sử dụng ElastiCache để xây dựng ứng dụng thời gian thực, tăng tốc thương mại điện tử và lưu vào bộ nhớ đệm trang web của họ. Các trường hợp sử dụng: giao dịch theo thời gian thực, trò chuyện, BI và phân tích, cửa hàng phiên, bảng xếp hạng trò chơi và bộ đệm.\nLưu lượng truy cập lớn có thể tắt ứng dụng và trang web nếu máy chủ không thể xử lý tải. Đây là lý do tại sao AWS có ELB, có thể phát hiện khi có quá nhiều yêu cầu và tự động chuyển hướng lưu lượng truy cập sang máy chủ mới để duy trì tốc độ và độ ổn định.\nElastic Load Balancing tự động phân phối lưu lượng truy cập đến của bạn trên nhiều mục tiêu, chẳng hạn như các phiên bản EC2, vùng chứa và địa chỉ IP, trong một hoặc nhiều Vùng khả dụng. Nó theo dõi tình trạng của các mục tiêu đã đăng ký và chỉ định tuyến lưu lượng truy cập đến các mục tiêu lành mạnh. Elastic Load Balancing tự động điều chỉnh dung lượng bộ cân bằng tải của bạn để phản hồi các thay đổi trong lưu lượng truy cập đến.\nLợi ích của Load Balancing Cân bằng tải đàn hồi tự động phân phối lưu lượng truy cập ứng dụng đến trên nhiều mục tiêu, chẳng hạn như phiên bản, bộ chứa, địa chỉ IP và chức năng AWS Lambda của Amazon Elastic Computing Cloud (Amazon EC2).\nNếu lưu lượng truy cập vào một trang web đột ngột tăng đột biến, lưu lượng truy cập đó có thể được chuyển đến các phiên bản EC2 khác (hoặc các loại phiên bản khác như phiên bản Lambda) đã được thiết lập trước cho mục đích này. Cân bằng tải này tránh cho một máy chủ bị quá tải do lưu lượng truy cập tăng lên.\nNhững lợi ích chính của ELB: Tăng khả năng sẵn sàng: Phân tán lưu lượng: ELB phân tán lưu lượng truy cập đến nhiều instance, giúp giảm thiểu rủi ro khi một instance gặp sự cố. Nếu một instance bị lỗi, ELB sẽ tự động chuyển hướng các yêu cầu đến các instance còn lại. Khả năng phục hồi: ELB liên tục giám sát tình trạng của các instance và tự động loại bỏ những instance không hoạt động và thêm các instance mới vào khi cần thiết. Cải thiện hiệu suất: Phân bổ tải: ELB giúp phân bổ tải làm việc đồng đều cho các instance, ngăn chặn tình trạng quá tải trên một instance. Giảm thời gian phản hồi: Bằng cách phân tán lưu lượng, ELB giúp giảm thiểu thời gian phản hồi của ứng dụng, mang lại trải nghiệm tốt hơn cho người dùng. Tăng khả năng mở rộng: Điều chỉnh quy mô tự động: ELB có thể tự động điều chỉnh quy mô của cụm instance để đáp ứng nhu cầu thay đổi của ứng dụng. Khi lưu lượng tăng, ELB sẽ tự động thêm các instance mới vào cụm và ngược lại. Bảo mật: Kết nối SSL/TLS: ELB hỗ trợ kết nối SSL/TLS để bảo mật dữ liệu truyền đi giữa người dùng và ứng dụng. Quản lý chứng chỉ: ELB giúp bạn dễ dàng quản lý các chứng chỉ SSL/TLS. Tính năng nâng cao: Cân bằng tải dựa trên đường dẫn: ELB có thể phân phối lưu lượng dựa trên đường dẫn URL, giúp tối ưu hóa việc sử dụng các tài nguyên. Cân bằng tải dựa trên cookie: ELB có thể duy trì session của người dùng bằng cách sử dụng cookie, giúp đảm bảo rằng các yêu cầu của một người dùng cụ thể luôn được gửi đến cùng một instance. Tích hợp với các dịch vụ AWS khác: ELB có thể dễ dàng tích hợp với các dịch vụ AWS khác như Auto Scaling, CloudWatch, và Route 53. "
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.2-endpointssmmessages/",
	"title": "Tạo Endpoint ssmmessages",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSMMESSAGES Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSMMESSAGES. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: ssmmessages sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ssmmessages. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ssmmessages. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint SSMMESSAGES. "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.2-launch_a_second_ec2_instance/",
	"title": "Tạo IAM Role",
	"tags": [],
	"description": "",
	"content": "Tạo IAM Role Trong bước này chúng ta sẽ tiến hành tạo IAM Role. Trong IAM Role này sẽ được gán policy AmazonSSMManagedInstanceCore, đây là policy cho phép máy chủ EC2 có thể giao tiếp với Session Manager.\nTruy cập vào giao diện quản trị dịch vụ IAM Ở thanh điều hướng bên trái, click Roles. Click Create role. Click AWS service và click EC2. Click Next: Permissions. Trong ô Search, điền AmazonSSMManagedInstanceCore và ấn phím Enter để tìm kiếm policy này. Click chọn policy AmazonSSMManagedInstanceCore. Click Next: Tags. Click Next: Review. Đặt tên cho Role là SSM-Role ở Role Name Click Create Role . Tiếp theo chúng ta sẽ thực hiện kết nối đến các máy chủ EC2 chúng ta đã tạo bằng Session Manager.\n"
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/",
	"title": "Tạo kết nối đến máy chủ EC2 Private",
	"tags": [],
	"description": "",
	"content": "Đối với Windows instance nằm trong private subnet, không có public IP, không có internet gateway nên không thể đi ra ngoài internet.\nVới loại instance này, cách làm truyền thống là ta sẽ sử dụng kỹ thuật Bastion host tốn nhiều chi phí và công sức, nhưng ở đây chúng ta sẽ sử dụng Session Manager với loại này.\nCơ bản là private instance vẫn phải mở cổng TCP 443 tới System Manager, nhưng không cho kết nối đó đi ra ngoài internet mà chỉ cho đi trong chính VPC của mình, nên đảm bảo được vấn đề bảo mật.\nĐể làm được điều đó, ta phải đưa endpoint của System Manager vào trong VPC, nghĩa là sử dụng VPC interface endpoint:\nVPC interface endpoint được gắn với subnet nên cách làm này không những với private subnet mà còn có thể làm với public subnet, nghĩa là với public subnet, bạn hoàn toàn có thể không cho TCP 443 đi ra ngoài internet.\nNội dung: Kích hoạt DNS hostnames Tạo VPC Endpoint Kết nối Private Instance "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.2-createpublicsubnet/",
	"title": "Tạo Public subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Public subnet Click Subnets. Click Create subnet. Tại trang Create subnet. Tại mục VPC ID click chọn Lab VPC. Tại mục Subnet name điền Lab Public Subnet. Tại mục Availability Zone chọn Availability zone đầu tiên. Tại mục IPv4 CIRD block điền 10.10.1.0/24. Kéo xuống cuối trang , click Create subnet.\nClick chọn Lab Public Subnet.\nClick Actions. Click Edit subnet settings. Click chọn Enable auto-assign public IPv4 address. Click Save. Click Internet Gateways. Click Create internet gateway. Tại trang Create internet gateway. Tại mục Name tag điền Lab IGW. Click Create internet gateway. Sau khi tạo thành công, click Actions. Click Attach to VPC. Tại trang Attach to VPC. Tại mục Available VPCs chọn Lab VPC. Click Attach internet gateway. Kiểm tra quá trình attach thành công như hình dưới. Tiếp theo chúng ta sẽ tạo một custom route table để gán vào Lab Public Subnet. Click Route Tables. Click Create route table. Tại trang Create route table. Tại mục Name, điền Lab Publicrtb. Tại mục VPC, chọn Lab VPC. Click Create route table. Sau khi tạo route table thành công. Click Edit routes. Tại trang Edit routes. Click Add route. Tại mục Destination điền 0.0.0.0/0 Tại mục Target chọn Internet Gateway sau đó chọn Lab IGW. Click Save changes. Click tab Subnet associations. Click Edit subnet associations để tiến hành associate custom routable chúng ta vừa tạo vào Lab Public Subnet. Tại trang Edit subnet associations. Click chọn Lab Public Subnet. Click Save associations. Kiểm tra thông tin route table đã được associate với Lab Public Subnet và thông tin route đi internet đã được trỏ đến Internet Gateway như hình dưới. "
},
{
	"uri": "//localhost:51778/vi/4-test_clean_up/4.2-creates3bucket/",
	"title": "Tạo S3 Bucket",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ tạo 1 S3 bucket để lưu trữ các session logs được gửi từ các EC2 instance.\nTạo S3 Bucket Truy cập giao diện quản trị dịch vụ S3 Click Create bucket. Tại trang Create bucket. Tại mục Bucket name điền tên bucket lab-yourname-bucket-0001 Tại mục Region chọn Region bạn đang làm lab hiện tại. Tên S3 bucket phải đảm bảo không trùng với toàn bộ S3 bucket khác trong hệ thống. Bạn có thể thay thế tên mình và điền số ngẫu nhiên khi tạo tên S3 bucket.\nKéo chuột xuống phía dưới và click Create bucket. Khi tạo S3 bucket chúng ta đã thực hiện Block all public access nên các EC2 instance của chúng ta sẽ không thể kết nối tới S3 thông qua mạng internet. Trong bước tiếp theo chúng ta sẽ cấu hình tính năng S3 Gateway Endpoint để cho phép các EC2 instance có thể kết nối tới S3 bucket thông qua mạng nội bộ của VPC.\n"
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.2-createvpcendpoint/",
	"title": "Tạo VPC Endpoint",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint SSM Chúng ta sẽ tạo 3 interface endpoint yêu cầu bởi Session Manager: Interface endpoint: com.amazonaws.region.ssm com.amazonaws.region.ec2messages com.amazonaws.region.ssmmessages Bạn có thể tham khảo thêm tại đây\nNội dung: Tạo Endpoint ssm Tạo Endpoint ssmmessages Tạo Endpoint ec2messages "
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.3-connectec2/",
	"title": "Kết nối EC2 Private",
	"tags": [],
	"description": "",
	"content": "Gán IAM role và restart EC2 instance. Truy cập giao diện quản trị dịch vụ EC2 Click chọn Private Windows Instance. Click Actions. Click Security. Click Modify IAM Role. Tại trang Modify IAM Role. Tại mục IAM role, chọn SSM-Role. Click Save. Click chọn Private Windows Instance. Click Instance state. Click Reboot instance để thực hiện restart, sau đó click Reboot để xác nhận. Bạn hãy đợi 5 phút trước khi làm bước tiếp theo nhé.\nKết nối tới máy chủ private EC2 instance. Truy cập vào giao diện quản trị dịch vụ System Manager - Session Manager Click Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig để kiểm tra thông tin địa chỉ IP của Private Windows Instance như dưới đây. "
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/3.2-private-instance/3.2.2-createvpcendpoint/3.2.2.3-endpointec2messages/",
	"title": "Tạo Endpoint ec2messages",
	"tags": [],
	"description": "",
	"content": "Tạo VPC Endpoint EC2MESSAGES Truy cập đến giao diện quản trị của dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền SSMMESSAGES. Tại mục Service Category chọn AWS Services. Tại mục Service Name, Tại mục Service category chọn: AWS services Tại mục Service Name nhập: ec2 sau đó chọn Service Name: com.amazonaws.ap-southeast-1.ec2messages. Tại cột Service Name, click chọn com.amazonaws.ap-southeast-1.ec2messages. Tại mục VPC, chọn Lab VPC. Chọn AZ đầu tiên, sau đó chọn subnet Lab Private Subnet. Kéo chuột xuống dưới. Tại mục Security Group, chọn Security group SG VPC Endpoint mà chúng ta đã tạo trước đó. Tại mục Policy, chọn Full access Kéo chuột xuống dưới cùng. Click Create endpoint. Chúng ta đã tạo xong VPC Interface Endpoint EC2MESSAGES.\nĐảm bảo 3 endpoint cần thiết đã được tạo như hình dưới.\n"
},
{
	"uri": "//localhost:51778/vi/3-initialize_load_balancer/",
	"title": "Tạo kết nối đến máy chủ EC2",
	"tags": [],
	"description": "",
	"content": "Trong bước này, chúng ta sẽ thực hiện tạo kết nối đến các máy chủ EC2 của chúng ta, nằm trong cả public và private subnet.\nNội dung 3.1. Tạo Kết nối đến máy chủ EC2 Public 3.2. Tạo Kết nối đến máy chủ EC2 Private\n"
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.3-createprivatesubnet/",
	"title": "Tạo Private subnet",
	"tags": [],
	"description": "",
	"content": "Tạo Private subnet Click Subnets. Click Create subnet. Tại trang Create subnet. Tại mục VPC ID click chọn Lab VPC. Tại mục Subnet name điền Lab Private Subnet. Tại mục Availability Zone chọn Availability zone đầu tiên. Tại mục IPv4 CIRD block điền 10.10.2.0/24. Kéo xuống cuối trang , click Create subnet. Bước tiếp theo chúng ta sẽ tạo các security group cần thiết cho bài lab.\n"
},
{
	"uri": "//localhost:51778/vi/4-test_clean_up/4.3-creategwes3/",
	"title": "Tạo S3 Gateway endpoint",
	"tags": [],
	"description": "",
	"content": " Truy cập vào giao diện quản trị dịch vụ VPC Click Endpoints. Click Create endpoint. Tại trang Create endpoint. Tại mục Name tag điền S3GW. Tại mục Service Category click chọn AWS services. Tại ô tìm kiếm điền S3, sau đó chọn com.amazonaws.[region].s3 Tại mục Services chọn com.amazonaws.[region].s3 có Type là Gateway. Tại mục VPC , chọn Lab VPC. Tại mục Route tables, chọn cả 2 route table. Kéo chuột xuống dưới cùng, click Create endpoint. Bước tiếp theo chúng ta sẽ tiến hành cấu hình Session Manager để có thể lưu trữ các session logs tới S3 bucket chúng ta đã tạo.\n"
},
{
	"uri": "//localhost:51778/vi/4-test_clean_up/",
	"title": "Quản lý session logs",
	"tags": [],
	"description": "",
	"content": "Với Session Manager chúng ta có thể xem được lịch sử các kết nối tới các instance thông qua Session history. Tuy nhiên chúng ta chưa xem được chi tiết các câu lệnh được sử dụng.\nTrong phần này chúng ta sẽ tiến hành tạo S3 bucket và thực hiện cấu hình lưu trữ các session logs để xem được chi tiết các câu lệnh được sử dụng trong session.\nNội dung: Cập nhật IAM Role Tạo S3 Bucket Tạo S3 Gateway endpoint Cấu hình Session logs "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.4-createsecgroup/",
	"title": "Tạo các security group",
	"tags": [],
	"description": "",
	"content": "Tạo các security group Trong bước này chúng ta sẽ tiến hành tạo các security group được sử dụng cho các instance của chúng ta. Các bạn có thể thấy, các securiy group này sẽ không cần phải mở các port truyền thống để ssh như port 22 hoặc remote desktop thông qua port 3389.\nTạo security group cho Linux instance nằm trong public subnet Truy cập giao diện quản trị dịch vụ VPC Click Security Group. Click Create security group. Tại mục Security group name, điền SG Public Linux Instance. Tại mục Description, điền SG Public Linux Instance. Tại mục VPC, click dấu X để chọn lại Lab VPC bạn đã tạo cho bài lab này. Giữ nguyên Outbound rule, kéo chuột xuống phía dưới. Click Create security group. Các bạn có thể thấy, security group chúng ta tạo sử dụng cho Linux public instance sẽ không cần phải mở các port truyền thống để ssh như port 22.\nTạo security group cho Windows instance nằm trong private subnet Sau khi tạo thành công security group cho Linux instance nằm trong public subnet, click vào link Security Groups để quay trở lại danh sách Security groups. Click Create security group.\nTại mục Security group name, điền SG Private Windows Instance.\nTại mục Description, điền SG Private Windows Instance. Tại mục VPC, click dấu X để chọn lại Lab VPC bạn đã tạo cho bài lab này. Kéo chuột xuống phía dưới. Thêm Outbound rule cho phép kết nối TCP 443 tới 10.10.0.0/16 ( CIDR của Lab VPC chúng ta đã tạo) Click Create security group. Đối với Instance trong private subnet, chúng ta sẽ kết nối tới endpoint của Session Manager qua kết nối đã được mã hóa TLS. vì thế chúng ta cần cho phép kết nối chiều ra từ instance của mình tới VPC CIDR thông qua port 443.\nTạo security group cho VPC Endpoint Trong bước này, chúng ta sẽ tạo security group cho VPC Endpoint của Session Manager. Sau khi tạo thành công security group cho Windows instance trong private subnet, click vào link Security Groups để quay trở lại danh sách Security groups. Click Create security group. Tại mục Security group name, điền SG VPC Endpoint. Tại mục Description, điền SG VPC Endpoint. Tại mục VPC, click dấu X để chọn lại Lab VPC bạn đã tạo cho bài lab này. Kéo chuột xuống phía dưới. Xóa Outbound rule. Thêm Inbound rule cho phép TCP 443 đến từ 10.10.0.0/16 ( CIDR của Lab VPC chúng ta đã tạo ). Click Create security group. Như vậy chúng ta đã tiến hành xong việc tạo các security group cần thiết cho các EC2 instance và VPC Endpoint.\n"
},
{
	"uri": "//localhost:51778/vi/4-test_clean_up/4.4-configsessionlogs/",
	"title": "Theo dõi session logs",
	"tags": [],
	"description": "",
	"content": "Theo dõi session logs Truy cập giao diện quản trị dịch vụ System Manager - Session Manager Click tab Preferences. Click Edit. Kéo chuột xuống phía dưới, tại mục S3 logging, click chọn Enable. Bỏ chọn Allow only encrypted S3 buckets. Click chọn Choose a bucket name from the list. Chọn S3 bucket bạn đã tạo. Kéo chuột xuống phía dưới, click Save để lưu cấu hình.\nTruy cập giao diện quản trị dịch vụ System Manager - Session Manager\nClick Start session. Click chọn Private Windows Instance. Click Start session. Gõ lệnh ipconfig. Gõ lệnh hostname. Click Terminate để thoát session, click Terminate 1 lần nữa để xác nhận. Kiểm tra Session logs trong S3 Truy cập vào giao diện quản trị dịch vụ S3 Click vào tên S3 bucket chúng ta đã tạo cho bài lab. Click vào tên file sessions log Tại trang chi tiết objects , click Open. File logs sẽ được mở ở 1 tab mới trên trình duyệt.Bạn có thể xem các câu lệnh đã được lưu trữ lại trong session logs. "
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.5-createec2linux/",
	"title": "Tạo Public Linux EC2",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click Launch instances. Tại trang Step 1: Choose an Amazon Machine Image (AMI). Click Select để lựa chọn AMI Amazon Linux 2 AMI. Tại trang Step 2: Choose an Instance Type. Click chọn Instance type t2.micro. Click Next: Configure Instance Details. Tại trang Step 3: Configure Instance Details Tại mục Network chọn Lab VPC. Tại mục Subnet chọn Lab Public Subnet. Tại mục Auto-assign Public IP chọn Use subnet setting (Enable) Click Next: Add Storage. Click Next: Add Tags để chuyển sang bước kế tiếp. Click Next: Configure Security Group để chuyển sang bước kế tiếp. Tại trang Step 6: Configure Security Group. Chọn Select an existing security group. Chọn security group SG Public Linux Instance. Click Review and Launch. Hộp thoại cảnh báo hiện lên vì chúng ta không cấu hình tường lửa cho phép kết nối vào port 22, Click Continue để tiếp tục.\nTại trang Step 7: Review Instance Launch.\nClick Launch. Tại hộp thoại Select an existing key pair or create a new key pair. Click chọn Create a new key pair. Tại mục Key pair name điền LabKeypair. Click Download Key Pair và lưu xuống máy tính của bạn. Click Launch Instances để tạo máy chủ EC2. Click View Instances để quay lại danh mục EC2 instances.\nClick vào biểu tượng edit dưới cột Name.\nTại hộp thoại Edit Name điền Public Linux Instance. Click Save. Tiếp theo chúng ta sẽ thực hiện tương tự để tạo 1 EC2 Instance Windows chạy trong Private subnet.\n"
},
{
	"uri": "//localhost:51778/vi/2-create_ec2_instance_for_load_balancing/2.1-launch_your_first_ec2_instance/2.1.6-createec2windows/",
	"title": "Tạo Private Windows EC2",
	"tags": [],
	"description": "",
	"content": " Truy cập giao diện quản trị dịch vụ EC2 Click Instances. Click Launch instances. Tại trang Step 1: Choose an Amazon Machine Image (AMI). Kéo chuột xuống phía dưới. Click Select để lựa chọn AMI Microsoft Windows Server 2019 Base. Tại trang Step 2: Choose an Instance Type. Click chọn Instance type t2.micro. Click Next: Configure Instance Details. Tại trang Step 3: Configure Instance Details Tại mục Network chọn Lab VPC. Tại mục Subnet chọn Lab Private Subnet. Tại mục Auto-assign Public IP chọn Use subnet setting (Disable) Click Next: Add Storage. Click Next: Add Tags để chuyển sang bước kế tiếp. Click Next: Configure Security Group để chuyển sang bước kế tiếp. Tại trang Step 6: Configure Security Group. Chọn Select an existing security group. Chọn security group SG Private Windows Instance. Click Review and Launch. Hộp thoại cảnh báo hiện lên vì chúng ta không cấu hình tường lửa cho phép kết nối vào port 22, Click Continue để tiếp tục.\nTại trang Step 7: Review Instance Launch.\nClick Launch. Tại hộp thoại Select an existing key pair or create a new key pair. Click chọn Choose an existing key pair. Tại mục Key pair name chọn LabKeypair. Click chọn I acknowledge that I have access to the corresponding private key file, and that without this file, I won\u0026rsquo;t be able to log into my instance.. Click Launch Instances để tạo máy chủ EC2. Click View Instances để quay lại danh mục EC2 instances.\nClick vào biểu tượng edit dưới cột Name.\nTại hộp thoại Edit Name điền Private Windows Instance. Click Save. Tiếp theo chúng ta sẽ tiến hành tạo các IAM Role để phục vụ cho Session Manager.\n"
},
{
	"uri": "//localhost:51778/vi/categories/",
	"title": "Categories",
	"tags": [],
	"description": "",
	"content": ""
},
{
	"uri": "//localhost:51778/vi/tags/",
	"title": "Tags",
	"tags": [],
	"description": "",
	"content": ""
}]